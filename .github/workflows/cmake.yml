name: CMake build and test

on:
  push:
    branches: [ "trunk" ]
  pull_request:
    branches: [ "trunk" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: ["gcc", "clang"]


    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libmsgpack-dev libmosquitto-dev libi2c-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      env:
        CC: ${{matrix.compiler}}
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_DOCUMENTATION=OFF -DENABLE_VALGRIND_CTEST=OFF

    - name: Build
      # Build your program with the given configuration
      env:
        CC: ${{matrix.compiler}}
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

  package:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libmsgpack-dev libmosquitto-dev libi2c-dev

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_DOCUMENTATION=OFF -DENABLE_VALGRIND_CTEST=OFF

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Run CPack (.deb)
      working-directory: ${{github.workspace}}/build
      run: cpack -G DEB -C ${{env.BUILD_TYPE}} ./

    - name: Run CPack (.rpm)
      working-directory: ${{github.workspace}}/build
      run: cpack -G RPM -C ${{env.BUILD_TYPE}} ./

    - name: Upload Packages
      uses: actions/upload-artifact@v3
      with:
        path: |
          ${{github.workspace}}/build/*.deb
          ${{github.workspace}}/build/*.rpm


